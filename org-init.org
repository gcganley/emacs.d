* Emacs configuration in Org-Mode
  Why? becuase. really its to better help me edit and understand my own emacs-lisp code

* Bytecompile
  I'm not sure why i put this in besides to add a bit of lag in the load time, we'll see if it helps any down the line

#+BEGIN_SRC emacs-lisp
(byte-recompile-directory (expand-file-name "~/.emacs.d") 0)
#+END_SRC

* Load user files
  creates user directory and binds it. I M-w C-y this from a stackoverflow question

#+BEGIN_SRC emacs-lisp
(defconst user-init-dir
  (cond ((boundp 'user-emacs-directory)
         user-emacs-directory)
        ((boundp 'user-init-directory)
         user-init-directory)
        (t "~/.emacs.d/")))

(defun load-user-file (file)
  (interactive "f")
  "Load a file in current user's configuration directory"
  (load-file (expand-file-name file user-init-dir)))

#+END_SRC

* Themes
  I'm using zenburn right now, it works pretty well and for the most part I switch between this and solarized

#+BEGIN_SRC emacs-lisp
(load-user-file "themes/zenburn-theme.el")
#+END_SRC

* Packages
  I use package.el and some shit I pulled from purcell/prelude to handel it all nicely

#+BEGIN_SRC emacs-lisp
(load-user-file "gganley/packages.el")
#+END_SRC

* Main
  This is the biggest heap of shit known to man, im going to make it literate and add some context to my decisions

#+BEGIN_SRC emacs-lisp
(load-user-file "gganley/config.el")
(load-user-file "gganley/js.el")
(load-user-file "gganley/lisp.el")
(load-user-file "gganley/haskell.el")
(load-user-file "gganley/keybindings.el")
#+END_SRC
